{
  
    
        "post0": {
            "title": "Assignment 3",
            "content": "Pandas and plotting exercises . import pandas as pd import matplotlib.pyplot as plt . In Week 2, you used a dataset from the CORGIS website. You may have used either the Python, CSV, or JSON data files. . For this assignment, use the CSV file format for the same category of data that you used previously. . df = pd.read_csv(&#39;graduates.csv&#39;) . df . Year Demographics.Total Education.Major Salaries.Highest Salaries.Lowest Salaries.Mean Salaries.Median Salaries.Quantity Salaries.Standard Deviation Demographics.Ethnicity.Asians ... Employment.Work Activity.Design Employment.Work Activity.Development Employment.Work Activity.Human Resources Employment.Work Activity.Managing/Supervising People/Projects Employment.Work Activity.Other Employment.Work Activity.Productions/Operations/Maintenance Employment.Work Activity.Professional Service Employment.Work Activity.Qualitity/Productivity Management Employment.Work Activity.Sales, Purchasing, Marketing Employment.Work Activity.Teaching . 0 1993 | 1295598 | Biological Sciences | 999999.0 | 0.0 | 160585.73 | 51000.0 | 13432 | 297818.25 | 84495 | ... | 118772 | 191867 | 365049 | 539430 | 99749 | 103385 | 506252 | 269042 | 215169 | 381908 | . 1 1993 | 211875 | Chemical Engineering | 999999.0 | 9000.0 | 126176.52 | 56000.0 | 3375 | 245705.77 | 27531 | ... | 82344 | 76108 | 59299 | 102248 | 16361 | 30480 | 24690 | 63895 | 44780 | 17718 | . 2 1993 | 507616 | Chemistry | 999999.0 | 8000.0 | 148872.00 | 60000.0 | 7834 | 276000.33 | 49984 | ... | 81772 | 123256 | 121783 | 208278 | 35007 | 40898 | 129716 | 114801 | 78059 | 104191 | . 3 1993 | 336366 | Civil Engineering | 999999.0 | 10000.0 | 129070.55 | 50000.0 | 4035 | 259543.49 | 37295 | ... | 133430 | 62031 | 108338 | 203035 | 37940 | 28639 | 70727 | 116758 | 73133 | 26892 | . 4 1993 | 1070111 | Computer Science and Math | 999999.0 | 0.0 | 134299.53 | 49000.0 | 9996 | 269323.82 | 83826 | ... | 251941 | 200490 | 287405 | 439446 | 62482 | 73411 | 126083 | 223467 | 168404 | 234507 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 512 2015 | 1176525 | Sociology | 1223166.0 | 0.0 | 58871.70 | 50000.0 | 1798 | 62083.18 | 59244 | ... | 85782 | 151538 | 261143 | 415552 | 204818 | 72050 | 342903 | 183692 | 345302 | 301924 | . 513 2015 | 55738 | Statistics | 1038725.0 | 0.0 | 99210.87 | 88000.0 | 157 | 90534.66 | 16211 | ... | 13908 | 11798 | 8419 | 19960 | 3437 | 5489 | 12803 | 7736 | 10741 | 6290 | . 514 2015 | 169991 | Zoology, General | 1223166.0 | 0.0 | 86957.98 | 60000.0 | 317 | 124675.05 | 17563 | ... | 15366 | 30180 | 29873 | 60016 | 29924 | 24622 | 57404 | 30979 | 35810 | 56660 | . 515 2015 | 0 | Management &amp; Administration | 0.0 | 0.0 | 0.00 | 0.0 | 0 | 0.00 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 516 2015 | 0 | Political and related sciences | 0.0 | 0.0 | 0.00 | 0.0 | 0 | 0.00 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 517 rows × 50 columns . df.index . RangeIndex(start=0, stop=517, step=1) . df.columns . Index([&#39;Year&#39;, &#39;Demographics.Total&#39;, &#39;Education.Major&#39;, &#39;Salaries.Highest&#39;, &#39;Salaries.Lowest&#39;, &#39;Salaries.Mean&#39;, &#39;Salaries.Median&#39;, &#39;Salaries.Quantity&#39;, &#39;Salaries.Standard Deviation&#39;, &#39;Demographics.Ethnicity.Asians&#39;, &#39;Demographics.Ethnicity.Minorities&#39;, &#39;Demographics.Ethnicity.Whites&#39;, &#39;Demographics.Gender.Females&#39;, &#39;Demographics.Gender.Males&#39;, &#39;Education.Degrees.Bachelors&#39;, &#39;Education.Degrees.Doctorates&#39;, &#39;Education.Degrees.Masters&#39;, &#39;Education.Degrees.Professionals&#39;, &#39;Employment.Employer Type.Business/Industry&#39;, &#39;Employment.Employer Type.Educational Institution&#39;, &#39;Employment.Employer Type.Government&#39;, &#39;Employment.Reason Working Outside Field.Career Change&#39;, &#39;Employment.Reason Working Outside Field.Family-related&#39;, &#39;Employment.Reason Working Outside Field.Job Location&#39;, &#39;Employment.Reason Working Outside Field.No Job Available&#39;, &#39;Employment.Reason Working Outside Field.Other&#39;, &#39;Employment.Reason Working Outside Field.Pay/Promotion&#39;, &#39;Employment.Reason Working Outside Field.Working Conditions&#39;, &#39;Employment.Reason for Not Working.Family&#39;, &#39;Employment.Reason for Not Working.Layoff&#39;, &#39;Employment.Reason for Not Working.No Job Available&#39;, &#39;Employment.Reason for Not Working.No need/want&#39;, &#39;Employment.Reason for Not Working.Student&#39;, &#39;Employment.Status.Employed&#39;, &#39;Employment.Status.Not in Labor Force&#39;, &#39;Employment.Status.Unemployed&#39;, &#39;Employment.Work Activity.Accounting/Finance/Contracts&#39;, &#39;Employment.Work Activity.Applied Research&#39;, &#39;Employment.Work Activity.Basic Research&#39;, &#39;Employment.Work Activity.Computer Applications&#39;, &#39;Employment.Work Activity.Design&#39;, &#39;Employment.Work Activity.Development&#39;, &#39;Employment.Work Activity.Human Resources&#39;, &#39;Employment.Work Activity.Managing/Supervising People/Projects&#39;, &#39;Employment.Work Activity.Other&#39;, &#39;Employment.Work Activity.Productions/Operations/Maintenance&#39;, &#39;Employment.Work Activity.Professional Service&#39;, &#39;Employment.Work Activity.Qualitity/Productivity Management&#39;, &#39;Employment.Work Activity.Sales, Purchasing, Marketing&#39;, &#39;Employment.Work Activity.Teaching&#39;], dtype=&#39;object&#39;) . df.dtypes . Year int64 Demographics.Total int64 Education.Major object Salaries.Highest float64 Salaries.Lowest float64 Salaries.Mean float64 Salaries.Median float64 Salaries.Quantity int64 Salaries.Standard Deviation float64 Demographics.Ethnicity.Asians int64 Demographics.Ethnicity.Minorities int64 Demographics.Ethnicity.Whites int64 Demographics.Gender.Females int64 Demographics.Gender.Males int64 Education.Degrees.Bachelors int64 Education.Degrees.Doctorates int64 Education.Degrees.Masters int64 Education.Degrees.Professionals int64 Employment.Employer Type.Business/Industry int64 Employment.Employer Type.Educational Institution int64 Employment.Employer Type.Government int64 Employment.Reason Working Outside Field.Career Change int64 Employment.Reason Working Outside Field.Family-related int64 Employment.Reason Working Outside Field.Job Location int64 Employment.Reason Working Outside Field.No Job Available int64 Employment.Reason Working Outside Field.Other int64 Employment.Reason Working Outside Field.Pay/Promotion int64 Employment.Reason Working Outside Field.Working Conditions int64 Employment.Reason for Not Working.Family int64 Employment.Reason for Not Working.Layoff int64 Employment.Reason for Not Working.No Job Available int64 Employment.Reason for Not Working.No need/want int64 Employment.Reason for Not Working.Student int64 Employment.Status.Employed int64 Employment.Status.Not in Labor Force int64 Employment.Status.Unemployed int64 Employment.Work Activity.Accounting/Finance/Contracts int64 Employment.Work Activity.Applied Research int64 Employment.Work Activity.Basic Research int64 Employment.Work Activity.Computer Applications int64 Employment.Work Activity.Design int64 Employment.Work Activity.Development int64 Employment.Work Activity.Human Resources int64 Employment.Work Activity.Managing/Supervising People/Projects int64 Employment.Work Activity.Other int64 Employment.Work Activity.Productions/Operations/Maintenance int64 Employment.Work Activity.Professional Service int64 Employment.Work Activity.Qualitity/Productivity Management int64 Employment.Work Activity.Sales, Purchasing, Marketing int64 Employment.Work Activity.Teaching int64 dtype: object . df.head(2) . Year Demographics.Total Education.Major Salaries.Highest Salaries.Lowest Salaries.Mean Salaries.Median Salaries.Quantity Salaries.Standard Deviation Demographics.Ethnicity.Asians ... Employment.Work Activity.Design Employment.Work Activity.Development Employment.Work Activity.Human Resources Employment.Work Activity.Managing/Supervising People/Projects Employment.Work Activity.Other Employment.Work Activity.Productions/Operations/Maintenance Employment.Work Activity.Professional Service Employment.Work Activity.Qualitity/Productivity Management Employment.Work Activity.Sales, Purchasing, Marketing Employment.Work Activity.Teaching . 0 1993 | 1295598 | Biological Sciences | 999999.0 | 0.0 | 160585.73 | 51000.0 | 13432 | 297818.25 | 84495 | ... | 118772 | 191867 | 365049 | 539430 | 99749 | 103385 | 506252 | 269042 | 215169 | 381908 | . 1 1993 | 211875 | Chemical Engineering | 999999.0 | 9000.0 | 126176.52 | 56000.0 | 3375 | 245705.77 | 27531 | ... | 82344 | 76108 | 59299 | 102248 | 16361 | 30480 | 24690 | 63895 | 44780 | 17718 | . 2 rows × 50 columns . df.tail(2) . Year Demographics.Total Education.Major Salaries.Highest Salaries.Lowest Salaries.Mean Salaries.Median Salaries.Quantity Salaries.Standard Deviation Demographics.Ethnicity.Asians ... Employment.Work Activity.Design Employment.Work Activity.Development Employment.Work Activity.Human Resources Employment.Work Activity.Managing/Supervising People/Projects Employment.Work Activity.Other Employment.Work Activity.Productions/Operations/Maintenance Employment.Work Activity.Professional Service Employment.Work Activity.Qualitity/Productivity Management Employment.Work Activity.Sales, Purchasing, Marketing Employment.Work Activity.Teaching . 515 2015 | 0 | Management &amp; Administration | 0.0 | 0.0 | 0.0 | 0.0 | 0 | 0.0 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 516 2015 | 0 | Political and related sciences | 0.0 | 0.0 | 0.0 | 0.0 | 0 | 0.0 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 2 rows × 50 columns . df.info . &lt;bound method DataFrame.info of Year Demographics.Total Education.Major 0 1993 1295598 Biological Sciences 1 1993 211875 Chemical Engineering 2 1993 507616 Chemistry 3 1993 336366 Civil Engineering 4 1993 1070111 Computer Science and Math .. ... ... ... 512 2015 1176525 Sociology 513 2015 55738 Statistics 514 2015 169991 Zoology, General 515 2015 0 Management &amp; Administration 516 2015 0 Political and related sciences Salaries.Highest Salaries.Lowest Salaries.Mean Salaries.Median 0 999999.0 0.0 160585.73 51000.0 1 999999.0 9000.0 126176.52 56000.0 2 999999.0 8000.0 148872.00 60000.0 3 999999.0 10000.0 129070.55 50000.0 4 999999.0 0.0 134299.53 49000.0 .. ... ... ... ... 512 1223166.0 0.0 58871.70 50000.0 513 1038725.0 0.0 99210.87 88000.0 514 1223166.0 0.0 86957.98 60000.0 515 0.0 0.0 0.00 0.0 516 0.0 0.0 0.00 0.0 Salaries.Quantity Salaries.Standard Deviation 0 13432 297818.25 1 3375 245705.77 2 7834 276000.33 3 4035 259543.49 4 9996 269323.82 .. ... ... 512 1798 62083.18 513 157 90534.66 514 317 124675.05 515 0 0.00 516 0 0.00 Demographics.Ethnicity.Asians ... Employment.Work Activity.Design 0 84495 ... 118772 1 27531 ... 82344 2 49984 ... 81772 3 37295 ... 133430 4 83826 ... 251941 .. ... ... ... 512 59244 ... 85782 513 16211 ... 13908 514 17563 ... 15366 515 0 ... 0 516 0 ... 0 Employment.Work Activity.Development 0 191867 1 76108 2 123256 3 62031 4 200490 .. ... 512 151538 513 11798 514 30180 515 0 516 0 Employment.Work Activity.Human Resources 0 365049 1 59299 2 121783 3 108338 4 287405 .. ... 512 261143 513 8419 514 29873 515 0 516 0 Employment.Work Activity.Managing/Supervising People/Projects 0 539430 1 102248 2 208278 3 203035 4 439446 .. ... 512 415552 513 19960 514 60016 515 0 516 0 Employment.Work Activity.Other 0 99749 1 16361 2 35007 3 37940 4 62482 .. ... 512 204818 513 3437 514 29924 515 0 516 0 Employment.Work Activity.Productions/Operations/Maintenance 0 103385 1 30480 2 40898 3 28639 4 73411 .. ... 512 72050 513 5489 514 24622 515 0 516 0 Employment.Work Activity.Professional Service 0 506252 1 24690 2 129716 3 70727 4 126083 .. ... 512 342903 513 12803 514 57404 515 0 516 0 Employment.Work Activity.Qualitity/Productivity Management 0 269042 1 63895 2 114801 3 116758 4 223467 .. ... 512 183692 513 7736 514 30979 515 0 516 0 Employment.Work Activity.Sales, Purchasing, Marketing 0 215169 1 44780 2 78059 3 73133 4 168404 .. ... 512 345302 513 10741 514 35810 515 0 516 0 Employment.Work Activity.Teaching 0 381908 1 17718 2 104191 3 26892 4 234507 .. ... 512 301924 513 6290 514 56660 515 0 516 0 [517 rows x 50 columns]&gt; . df.describe() . Year Demographics.Total Salaries.Highest Salaries.Lowest Salaries.Mean Salaries.Median Salaries.Quantity Salaries.Standard Deviation Demographics.Ethnicity.Asians Demographics.Ethnicity.Minorities ... Employment.Work Activity.Design Employment.Work Activity.Development Employment.Work Activity.Human Resources Employment.Work Activity.Managing/Supervising People/Projects Employment.Work Activity.Other Employment.Work Activity.Productions/Operations/Maintenance Employment.Work Activity.Professional Service Employment.Work Activity.Qualitity/Productivity Management Employment.Work Activity.Sales, Purchasing, Marketing Employment.Work Activity.Teaching . count 517.000000 | 5.170000e+02 | 5.170000e+02 | 517.000000 | 517.000000 | 517.000000 | 517.000000 | 517.000000 | 517.000000 | 517.000000 | ... | 517.000000 | 517.000000 | 517.000000 | 5.170000e+02 | 517.000000 | 517.000000 | 5.170000e+02 | 517.000000 | 517.000000 | 5.170000e+02 | . mean 2003.636364 | 2.089547e+05 | 2.206118e+05 | 674.545455 | 36126.199420 | 30395.125725 | 924.512573 | 30076.762863 | 22490.825919 | 27171.984526 | ... | 45028.549323 | 46441.029014 | 52072.808511 | 9.679434e+04 | 17743.234043 | 24256.222437 | 5.402252e+04 | 46718.632495 | 56225.628627 | 4.521384e+04 | . std 7.029787 | 4.624167e+05 | 3.826856e+05 | 2302.625137 | 39641.071927 | 31383.335725 | 1976.425141 | 50713.885207 | 55115.188066 | 72880.209807 | ... | 100556.629663 | 100429.720195 | 115187.838999 | 2.083848e+05 | 44889.310791 | 54878.096613 | 1.522205e+05 | 98313.894250 | 124010.354123 | 1.208068e+05 | . min 1993.000000 | 0.000000e+00 | 0.000000e+00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | ... | 0.000000 | 0.000000 | 0.000000 | 0.000000e+00 | 0.000000 | 0.000000 | 0.000000e+00 | 0.000000 | 0.000000 | 0.000000e+00 | . 25% 1997.000000 | 0.000000e+00 | 0.000000e+00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | ... | 0.000000 | 0.000000 | 0.000000 | 0.000000e+00 | 0.000000 | 0.000000 | 0.000000e+00 | 0.000000 | 0.000000 | 0.000000e+00 | . 50% 2003.000000 | 1.066600e+04 | 1.000000e+05 | 0.000000 | 33684.470000 | 30000.000000 | 29.000000 | 17483.740000 | 366.000000 | 590.000000 | ... | 1178.000000 | 1772.000000 | 1797.000000 | 3.962000e+03 | 266.000000 | 585.000000 | 9.560000e+02 | 1726.000000 | 1709.000000 | 1.548000e+03 | . 75% 2010.000000 | 1.680520e+05 | 1.500000e+05 | 0.000000 | 67193.250000 | 60000.000000 | 587.000000 | 38807.280000 | 15711.000000 | 15877.000000 | ... | 27106.000000 | 34617.000000 | 37542.000000 | 7.645500e+04 | 14164.000000 | 18968.000000 | 3.486500e+04 | 36493.000000 | 44780.000000 | 3.434700e+04 | . max 2015.000000 | 3.355678e+06 | 1.223166e+06 | 25000.000000 | 257851.200000 | 100000.000000 | 13432.000000 | 397375.060000 | 469649.000000 | 674394.000000 | ... | 741284.000000 | 696562.000000 | 849298.000000 | 1.427662e+06 | 411183.000000 | 404438.000000 | 1.285030e+06 | 637806.000000 | 905374.000000 | 1.089982e+06 | . 8 rows × 49 columns . df.describe(include=&#39;all&#39;) . Year Demographics.Total Education.Major Salaries.Highest Salaries.Lowest Salaries.Mean Salaries.Median Salaries.Quantity Salaries.Standard Deviation Demographics.Ethnicity.Asians ... Employment.Work Activity.Design Employment.Work Activity.Development Employment.Work Activity.Human Resources Employment.Work Activity.Managing/Supervising People/Projects Employment.Work Activity.Other Employment.Work Activity.Productions/Operations/Maintenance Employment.Work Activity.Professional Service Employment.Work Activity.Qualitity/Productivity Management Employment.Work Activity.Sales, Purchasing, Marketing Employment.Work Activity.Teaching . count 517.000000 | 5.170000e+02 | 517 | 5.170000e+02 | 517.000000 | 517.000000 | 517.000000 | 517.000000 | 517.000000 | 517.000000 | ... | 517.000000 | 517.000000 | 517.000000 | 5.170000e+02 | 517.000000 | 517.000000 | 5.170000e+02 | 517.000000 | 517.000000 | 5.170000e+02 | . unique NaN | NaN | 47 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | ... | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . top NaN | NaN | Biological Sciences | NaN | NaN | NaN | NaN | NaN | NaN | NaN | ... | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . freq NaN | NaN | 11 | NaN | NaN | NaN | NaN | NaN | NaN | NaN | ... | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | NaN | . mean 2003.636364 | 2.089547e+05 | NaN | 2.206118e+05 | 674.545455 | 36126.199420 | 30395.125725 | 924.512573 | 30076.762863 | 22490.825919 | ... | 45028.549323 | 46441.029014 | 52072.808511 | 9.679434e+04 | 17743.234043 | 24256.222437 | 5.402252e+04 | 46718.632495 | 56225.628627 | 4.521384e+04 | . std 7.029787 | 4.624167e+05 | NaN | 3.826856e+05 | 2302.625137 | 39641.071927 | 31383.335725 | 1976.425141 | 50713.885207 | 55115.188066 | ... | 100556.629663 | 100429.720195 | 115187.838999 | 2.083848e+05 | 44889.310791 | 54878.096613 | 1.522205e+05 | 98313.894250 | 124010.354123 | 1.208068e+05 | . min 1993.000000 | 0.000000e+00 | NaN | 0.000000e+00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | ... | 0.000000 | 0.000000 | 0.000000 | 0.000000e+00 | 0.000000 | 0.000000 | 0.000000e+00 | 0.000000 | 0.000000 | 0.000000e+00 | . 25% 1997.000000 | 0.000000e+00 | NaN | 0.000000e+00 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | ... | 0.000000 | 0.000000 | 0.000000 | 0.000000e+00 | 0.000000 | 0.000000 | 0.000000e+00 | 0.000000 | 0.000000 | 0.000000e+00 | . 50% 2003.000000 | 1.066600e+04 | NaN | 1.000000e+05 | 0.000000 | 33684.470000 | 30000.000000 | 29.000000 | 17483.740000 | 366.000000 | ... | 1178.000000 | 1772.000000 | 1797.000000 | 3.962000e+03 | 266.000000 | 585.000000 | 9.560000e+02 | 1726.000000 | 1709.000000 | 1.548000e+03 | . 75% 2010.000000 | 1.680520e+05 | NaN | 1.500000e+05 | 0.000000 | 67193.250000 | 60000.000000 | 587.000000 | 38807.280000 | 15711.000000 | ... | 27106.000000 | 34617.000000 | 37542.000000 | 7.645500e+04 | 14164.000000 | 18968.000000 | 3.486500e+04 | 36493.000000 | 44780.000000 | 3.434700e+04 | . max 2015.000000 | 3.355678e+06 | NaN | 1.223166e+06 | 25000.000000 | 257851.200000 | 100000.000000 | 13432.000000 | 397375.060000 | 469649.000000 | ... | 741284.000000 | 696562.000000 | 849298.000000 | 1.427662e+06 | 411183.000000 | 404438.000000 | 1.285030e+06 | 637806.000000 | 905374.000000 | 1.089982e+06 | . 11 rows × 50 columns . df[&#39;Year&#39;] . 0 1993 1 1993 2 1993 3 1993 4 1993 ... 512 2015 513 2015 514 2015 515 2015 516 2015 Name: Year, Length: 517, dtype: int64 . df[&#39;Salaries.Mean&#39;] . 0 160585.73 1 126176.52 2 148872.00 3 129070.55 4 134299.53 ... 512 58871.70 513 99210.87 514 86957.98 515 0.00 516 0.00 Name: Salaries.Mean, Length: 517, dtype: float64 . df.plot(x=&#39;Salaries.Mean&#39;) . &lt;AxesSubplot:xlabel=&#39;Salaries.Mean&#39;&gt; . df.plot(x=&#39;Salaries.Mean&#39;, y=&#39;Demographics.Gender.Females&#39;) . &lt;AxesSubplot:xlabel=&#39;Salaries.Mean&#39;&gt; . df.loc[[0,1,2,3,4,5,6,7,8,9,10],[&#39;Salaries.Mean&#39;]] . Salaries.Mean . 0 160585.73 | . 1 126176.52 | . 2 148872.00 | . 3 129070.55 | . 4 134299.53 | . 5 158542.76 | . 6 113262.51 | . 7 124761.62 | . 8 119635.90 | . 9 145709.93 | . 10 195036.54 | . # as well as the matching 10 elements of a different column that has interesting text df.loc[[0,1,2,3,4,5,6,7,8,9,10],[&#39;Salaries.Mean&#39;,&#39;Education.Major&#39;]] . Salaries.Mean Education.Major . 0 160585.73 | Biological Sciences | . 1 126176.52 | Chemical Engineering | . 2 148872.00 | Chemistry | . 3 129070.55 | Civil Engineering | . 4 134299.53 | Computer Science and Math | . 5 158542.76 | Economics | . 6 113262.51 | Electrical Engineering | . 7 124761.62 | Management &amp; Administration | . 8 119635.90 | Mechanical Engineering | . 9 145709.93 | Other Engineering | . 10 195036.54 | Physics and Astronomy | . # and make a bar plot with the text values horizontally and the numeric values as the bar heights df.iloc[0:10,5] . 0 160585.73 1 126176.52 2 148872.00 3 129070.55 4 134299.53 5 158542.76 6 113262.51 7 124761.62 8 119635.90 9 145709.93 Name: Salaries.Mean, dtype: float64 . df.iloc[[0,1,2,3,4,5,6,7,8,9],[5]] . Salaries.Mean . 0 160585.73 | . 1 126176.52 | . 2 148872.00 | . 3 129070.55 | . 4 134299.53 | . 5 158542.76 | . 6 113262.51 | . 7 124761.62 | . 8 119635.90 | . 9 145709.93 | . df.iloc[:10].plot(kind=&#39;bar&#39;, x=&#39;Education.Major&#39;, y=&#39;Salaries.Mean&#39;) . &lt;AxesSubplot:xlabel=&#39;Education.Major&#39;&gt; . df.iloc[:10].plot(kind=&#39;barh&#39;, x=&#39;Education.Major&#39;, y= &#39;Salaries.Mean&#39;) . &lt;AxesSubplot:ylabel=&#39;Education.Major&#39;&gt; . # and change at least two aesthetic elements (colors, labels, titles, ...) barcolors = [] for i in df[:10].index: if df.loc[i,&#39;Education.Major&#39;] in [&#39;Economics&#39;]: barcolors.append(&#39;green&#39;) else: barcolors.append(&#39;blue&#39;) print(barcolors) . [&#39;blue&#39;, &#39;blue&#39;, &#39;blue&#39;, &#39;blue&#39;, &#39;blue&#39;, &#39;green&#39;, &#39;blue&#39;, &#39;blue&#39;, &#39;blue&#39;, &#39;blue&#39;] . df[:10].plot(kind=&#39;barh&#39;, x=&#39;Education.Major&#39;, y=&#39;Salaries.Mean&#39;, # &lt; this line has to be included figsize=(13,8), color=barcolors) . &lt;AxesSubplot:ylabel=&#39;Education.Major&#39;&gt; . Free form section . Choose another type of plot that interests you from the pandas.DataFrame.plot documentation [look at the &#39;kind&#39; parameter] and make a new plot of your dataset values using the plot type | . a = df.loc[df[&#39;Education.Major&#39;] == &#39;Sociology&#39;] . a . Year Demographics.Total Education.Major Salaries.Highest Salaries.Lowest Salaries.Mean Salaries.Median Salaries.Quantity Salaries.Standard Deviation Demographics.Ethnicity.Asians ... Employment.Work Activity.Design Employment.Work Activity.Development Employment.Work Activity.Human Resources Employment.Work Activity.Managing/Supervising People/Projects Employment.Work Activity.Other Employment.Work Activity.Productions/Operations/Maintenance Employment.Work Activity.Professional Service Employment.Work Activity.Qualitity/Productivity Management Employment.Work Activity.Sales, Purchasing, Marketing Employment.Work Activity.Teaching . 24 1993 | 0 | Sociology | 0.0 | 0.0 | 0.00 | 0.0 | 0 | 0.00 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 71 1995 | 0 | Sociology | 0.0 | 0.0 | 0.00 | 0.0 | 0 | 0.00 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 118 1997 | 0 | Sociology | 0.0 | 0.0 | 0.00 | 0.0 | 0 | 0.00 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 165 1999 | 0 | Sociology | 0.0 | 0.0 | 0.00 | 0.0 | 0 | 0.00 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 212 2001 | 0 | Sociology | 0.0 | 0.0 | 0.00 | 0.0 | 0 | 0.00 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 277 2003 | 862339 | Sociology | 150000.0 | 0.0 | 52772.05 | 47000.0 | 1417 | 32688.41 | 24258 | ... | 83881 | 136404 | 271747 | 374277 | 65055 | 58088 | 284775 | 156161 | 268517 | 224630 | . 307 2006 | 0 | Sociology | 0.0 | 0.0 | 0.00 | 0.0 | 0 | 0.00 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 354 2008 | 0 | Sociology | 0.0 | 0.0 | 0.00 | 0.0 | 0 | 0.00 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 418 2010 | 1099912 | Sociology | 150000.0 | 0.0 | 56771.64 | 50000.0 | 1791 | 35543.44 | 46156 | ... | 87220 | 153057 | 263406 | 447231 | 106648 | 57953 | 361528 | 207364 | 317582 | 304067 | . 465 2013 | 1155686 | Sociology | 1155135.0 | 0.0 | 56116.32 | 46000.0 | 2123 | 66225.28 | 51373 | ... | 90499 | 169942 | 260145 | 451823 | 149783 | 57366 | 339669 | 192546 | 335336 | 329058 | . 512 2015 | 1176525 | Sociology | 1223166.0 | 0.0 | 58871.70 | 50000.0 | 1798 | 62083.18 | 59244 | ... | 85782 | 151538 | 261143 | 415552 | 204818 | 72050 | 342903 | 183692 | 345302 | 301924 | . 11 rows × 50 columns . df[:10].plot(kind=&#39;scatter&#39;, x=&#39;Education.Major&#39; , y=&#39;Salaries.Mean&#39;) . &lt;AxesSubplot:xlabel=&#39;Education.Major&#39;, ylabel=&#39;Salaries.Mean&#39;&gt; . Copy some of your analysis from the Week 2 assignment into new cells below | Clean them up if desired, and make sure that you translate them to work with your new pandas dataframe structure here if needed | Create several plots to complement and extend your analysis | . import pandas as pd import matplotlib.pyplot as plt . df = pd.read_csv(&#39;graduates.csv&#39;) . df . Year Demographics.Total Education.Major Salaries.Highest Salaries.Lowest Salaries.Mean Salaries.Median Salaries.Quantity Salaries.Standard Deviation Demographics.Ethnicity.Asians ... Employment.Work Activity.Design Employment.Work Activity.Development Employment.Work Activity.Human Resources Employment.Work Activity.Managing/Supervising People/Projects Employment.Work Activity.Other Employment.Work Activity.Productions/Operations/Maintenance Employment.Work Activity.Professional Service Employment.Work Activity.Qualitity/Productivity Management Employment.Work Activity.Sales, Purchasing, Marketing Employment.Work Activity.Teaching . 0 1993 | 1295598 | Biological Sciences | 999999.0 | 0.0 | 160585.73 | 51000.0 | 13432 | 297818.25 | 84495 | ... | 118772 | 191867 | 365049 | 539430 | 99749 | 103385 | 506252 | 269042 | 215169 | 381908 | . 1 1993 | 211875 | Chemical Engineering | 999999.0 | 9000.0 | 126176.52 | 56000.0 | 3375 | 245705.77 | 27531 | ... | 82344 | 76108 | 59299 | 102248 | 16361 | 30480 | 24690 | 63895 | 44780 | 17718 | . 2 1993 | 507616 | Chemistry | 999999.0 | 8000.0 | 148872.00 | 60000.0 | 7834 | 276000.33 | 49984 | ... | 81772 | 123256 | 121783 | 208278 | 35007 | 40898 | 129716 | 114801 | 78059 | 104191 | . 3 1993 | 336366 | Civil Engineering | 999999.0 | 10000.0 | 129070.55 | 50000.0 | 4035 | 259543.49 | 37295 | ... | 133430 | 62031 | 108338 | 203035 | 37940 | 28639 | 70727 | 116758 | 73133 | 26892 | . 4 1993 | 1070111 | Computer Science and Math | 999999.0 | 0.0 | 134299.53 | 49000.0 | 9996 | 269323.82 | 83826 | ... | 251941 | 200490 | 287405 | 439446 | 62482 | 73411 | 126083 | 223467 | 168404 | 234507 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 512 2015 | 1176525 | Sociology | 1223166.0 | 0.0 | 58871.70 | 50000.0 | 1798 | 62083.18 | 59244 | ... | 85782 | 151538 | 261143 | 415552 | 204818 | 72050 | 342903 | 183692 | 345302 | 301924 | . 513 2015 | 55738 | Statistics | 1038725.0 | 0.0 | 99210.87 | 88000.0 | 157 | 90534.66 | 16211 | ... | 13908 | 11798 | 8419 | 19960 | 3437 | 5489 | 12803 | 7736 | 10741 | 6290 | . 514 2015 | 169991 | Zoology, General | 1223166.0 | 0.0 | 86957.98 | 60000.0 | 317 | 124675.05 | 17563 | ... | 15366 | 30180 | 29873 | 60016 | 29924 | 24622 | 57404 | 30979 | 35810 | 56660 | . 515 2015 | 0 | Management &amp; Administration | 0.0 | 0.0 | 0.00 | 0.0 | 0 | 0.00 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 516 2015 | 0 | Political and related sciences | 0.0 | 0.0 | 0.00 | 0.0 | 0 | 0.00 | 0 | ... | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | . 517 rows × 50 columns . df[:10].plot(kind=&#39;line&#39;, x=&#39;Education.Major&#39; , y=&#39;Salaries.Mean&#39;) . &lt;AxesSubplot:xlabel=&#39;Education.Major&#39;&gt; . df[:10].plot(kind=&#39;box&#39;, x=&#39;Education.Major&#39; , y=&#39;Salaries.Mean&#39;) . &lt;AxesSubplot:&gt; .",
            "url": "https://aguilarleonela.github.io/leonelafinal/2022/03/08/Assignment03.html",
            "relUrl": "/2022/03/08/Assignment03.html",
            "date": " • Mar 8, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://aguilarleonela.github.io/leonelafinal/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://aguilarleonela.github.io/leonelafinal/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://aguilarleonela.github.io/leonelafinal/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://aguilarleonela.github.io/leonelafinal/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}